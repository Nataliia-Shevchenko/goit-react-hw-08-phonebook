{"version":3,"file":"static/js/329.11ac2068.chunk.js","mappings":"0NAEaA,EAAqB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAE1BC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAEnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,EAEpBC,GAAwBC,EAAAA,EAAAA,IACnC,CAACX,EAAoBQ,IACrB,SAACN,EAAD,GAAyB,IAAbO,EAAY,EAAZA,OACV,OAAOP,EAASO,QAAO,SAAAG,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASN,EAAOK,cADf,GAG/B,I,uCCdUE,EAAOC,EAAAA,EAAAA,KAAH,mOAWJC,EAAYD,EAAAA,EAAAA,MAAH,iGAKTE,EAAaF,EAAAA,EAAAA,OAAH,uK,mBCwCvB,EApDoB,WAClB,IAAMf,GAAWkB,EAAAA,EAAAA,IAAYpB,GAEvBqB,GAAWC,EAAAA,EAAAA,MAmBjB,OACE,iCACE,uCACA,UAACN,EAAD,CAAMO,SApBe,SAAAC,GACvBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OAEXzB,EAAS0B,MAAK,SAAAhB,GAAO,OAAIA,EAAQC,OAASa,EAAKG,SAAShB,KAAKiB,KAAxC,IACvBC,EAAAA,GAAAA,MAAA,UAAeL,EAAKG,SAAShB,KAAKiB,MAAlC,6BAGFT,GACEW,EAAAA,EAAAA,IAAW,CACTnB,KAAMa,EAAKG,SAAShB,KAAKiB,MACzBG,OAAQP,EAAKG,SAASI,OAAOH,SAGjCJ,EAAKQ,QACN,EAKG,WACE,qCAEE,SAAChB,EAAD,CACEiB,KAAK,OACLtB,KAAK,OACLuB,QAAQ,0GACRC,MAAM,yIACNC,UAAQ,QAGZ,uCAEE,SAACpB,EAAD,CACEiB,KAAK,MACLtB,KAAK,SACLuB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAACnB,EAAD,CAAYgB,KAAK,SAAjB,8BAIP,ECtDYI,EAAUtB,EAAAA,EAAAA,GAAH,gDAIPuB,EAAYvB,EAAAA,EAAAA,OAAH,6L,UCqBtB,EAnBuB,SAAC,GAAiB,IAAfL,EAAc,EAAdA,QAChB6B,EAAqB7B,EAArB6B,GAAI5B,EAAiBD,EAAjBC,KAAMoB,EAAWrB,EAAXqB,OAEZZ,GAAWC,EAAAA,EAAAA,MAIjB,OACE,+BACE,UAACiB,EAAD,YACE,SAAC,MAAD,CAAeG,KAAK,KAAKC,MAAM,QADjC,IAC0C9B,EAD1C,KACkDoB,GAChD,SAACO,EAAD,CAAWL,KAAK,SAASS,QANV,kBAAMvB,GAASwB,EAAAA,EAAAA,IAAcJ,GAA7B,EAMf,wBAMP,ECvBYK,EAAO7B,EAAAA,EAAAA,GAAH,+CCqBjB,EAfoB,WAElB,IAAM8B,GAAkB3B,EAAAA,EAAAA,IAAYV,GAEpC,OACE,SAACoC,EAAD,UAEEC,GAAoBA,EAAgBC,KAAI,SAAApC,GAAO,OAC7C,SAAC,EAAD,CAAgBA,QAASA,GAAcA,EAAQ6B,GADF,KAMpD,ECnBYQ,EAAchC,EAAAA,EAAAA,MAAH,iG,UCwBxB,EApBe,WACb,IAAQR,GAAWW,EAAAA,EAAAA,IAAYZ,GAAvBC,OAEFY,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iCACE,sCACA,qDAEE,SAAC2B,EAAD,CAAad,KAAK,OAAOL,MAAOrB,EAAQyC,SATnB,SAAA1B,GACzBH,GAAS8B,EAAAA,EAAAA,GAAU3B,EAAEG,OAAOG,OAC7B,SAWF,ECOD,EAvBqB,WAEjB,IAAMT,GAAWC,EAAAA,EAAAA,MACbjB,GAAYe,EAAAA,EAAAA,IAAYhB,GACxBG,GAAQa,EAAAA,EAAAA,IAAYd,GAM1B,OAJA8C,EAAAA,EAAAA,YAAU,WACR/B,GAASgC,EAAAA,EAAAA,MACV,GAAE,CAAChC,KAGF,4BACE,SAAC,EAAD,KACA,SAAC,EAAD,IACChB,IAAcE,IACb,wBACE,qDAGJ,SAAC,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactElement/ContactElement.styled.jsx","components/ContactElement/ContactElement.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContactsList, selectFilter],\n  (contacts, {filter}) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 20px;\n  width: 400px;\n  padding: 20px;\n  border: 2px solid #02639b;\n  border-radius: 5px;\n`;\nexport const FormInput = styled.input`\n  margin-left: 20px;\n  min-width: 250px;\n  border: 2px solid #02639b;\n`;\nexport const FormButton = styled.button`\n  min-width: 80px;\n  padding: 8px;\n  border: none;\n  border-radius: 5px;\n  background-color: #02639b;\n  &:hover {\n    color: #fff;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Form, FormInput, FormButton } from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContactsList } from 'redux/contacts/selectors';\nimport { toast } from 'react-hot-toast';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContactsList);\n\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n\n    if (contacts.find(contact => contact.name === form.elements.name.value)) {\n      toast.error(`${form.elements.name.value} is already in contacts`);\n      return;\n    }\n    dispatch(\n      addContact({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Form onSubmit={handleFormSubmit}>\n        <label>\n          Name\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <FormInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <FormButton type=\"submit\">Add contact</FormButton>\n      </Form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Contact = styled.li`\n  margin-bottom: 15px;\n`;\n\nexport const DelButton = styled.button`\n  margin-left: 20px;\n  min-width: 60px;\n  padding: 3px;\n  border: none;\n  border-radius: 5px;\n  background-color: #02639b;\n  &:hover {\n    color: #fff;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Contact, DelButton } from './ContactElement.styled';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { GiRotaryPhone } from 'react-icons/gi';\n\n\nconst ContactElement = ({ contact }) => {\n  const { id, name, number } = contact;\n\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <Contact>\n        <GiRotaryPhone size=\"15\" color='red'/> {name}: {number}\n        <DelButton type=\"button\" onClick={handleDelete}>\n          Delete\n        </DelButton>\n      </Contact>\n    </>\n  );\n};\n\nexport default ContactElement;\n\nContactElement.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n    list-style: none;\n`","import React from 'react';\nimport ContactElement from 'components/ContactElement';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { List } from './ContactList.styled';\n\n\n\nconst ContactList = () => {\n \n  const visibleContacts = useSelector(selectVisibleContacts)\n  \n  return (\n    <List>\n    {\n      visibleContacts  && visibleContacts.map(contact => (\n        <ContactElement contact={contact} key={contact.id}  />\n      ))\n      }\n    </List>\n  );\n};\n\nexport default ContactList;\n\n\n","import styled from '@emotion/styled';\n\nexport const FilterInput = styled.input`\n    margin-left: 20px;\nmin-width: 250px;\nborder: 2px solid #02639b;\n\n`","import React from 'react';\nimport { FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const { filter } = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <>\n      <h2>Contacts</h2>\n      <label>\n        Find contact by name\n        <FilterInput type=\"text\" value={filter} onChange={handleFilterChange} />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nconst ContactsPage = () => {\n\n    const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      {isLoading && !error && (\n        <p>\n          <b>Request in progress...</b>\n        </p>\n      )}\n      <ContactList />\n    </div>\n  );\n};\nexport default ContactsPage;\n"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","Form","styled","FormInput","FormButton","useSelector","dispatch","useDispatch","onSubmit","e","preventDefault","form","target","find","elements","value","toast","addContact","number","reset","type","pattern","title","required","Contact","DelButton","id","size","color","onClick","deleteContact","List","visibleContacts","map","FilterInput","onChange","setFilter","useEffect","fetchContacts"],"sourceRoot":""}