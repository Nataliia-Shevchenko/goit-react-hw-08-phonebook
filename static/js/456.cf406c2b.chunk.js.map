{"version":3,"file":"static/js/456.cf406c2b.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactElement/ContactElement.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContactsList, selectFilter],\n  (contacts, {filter}) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  /* margin-top: 20px; */\n  padding: 30px;\n  border-radius: 30px;\n  background-color: #c2e6f3;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n  /* display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 20px;\n  min-width: 300px;\n  padding: 20px;\n  border: 2px solid #02639b;\n  border-radius: 5px; */\n`;\n// export const FormInput = styled.input`\n//   margin-left: 20px;\n//   min-width: 250px;\n//   border: 2px solid #02639b;\n// `;\n// export const FormButton = styled.button`\n//   min-width: 80px;\n//   padding: 8px;\n//   border: none;\n//   border-radius: 5px;\n//   background-color: #02639b;\n//   &:hover {\n//     color: #fff;\n//   }\n// `;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Form } from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContactsList } from 'redux/contacts/selectors';\nimport { toast } from 'react-hot-toast';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContactsList);\n\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n\n    if (contacts.find(contact => contact.name === form.elements.name.value)) {\n      toast.error(`${form.elements.name.value} is already in contacts`);\n      return;\n    }\n    dispatch(\n      addContact({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleFormSubmit}>\n        <TextField\n          required\n          label=\"Name\"\n          type=\"text\"\n          variant=\"outlined\"\n          name=\"name\"\n          size=\"small\"\n          pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n        <TextField\n          required\n          label=\"Number\"\n          type=\"tel\"\n          variant=\"outlined\"\n          name=\"number\"\n          size=\"small\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n\n        <Button type=\"submit\" variant=\"contained\">\n          Add contact\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AccountCircleOutlinedIcon from '@mui/icons-material/AccountCircleOutlined';\nimport PhoneIcon from '@mui/icons-material/Phone';\n\nconst ContactElement = ({ contact }) => {\n  const { id, name, number } = contact;\n\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <Card sx={{ minWidth: 150 }}>\n        <CardContent sx={{ backgroundColor: '#faf8a2' }}>\n          <AccountCircleOutlinedIcon sx={{ color: 'blue' }} />\n          <Typography variant=\"h6\">{name}</Typography>\n          <PhoneIcon sx={{ color: 'blue' }} />\n          <Typography variant=\"h5\">{number}</Typography>\n        </CardContent>\n        <CardActions>\n          <Button\n            size=\"small\"\n            onClick={handleDelete}\n            startIcon={<DeleteIcon />}\n          >\n            Delete\n          </Button>\n        </CardActions>\n      </Card>\n    </>\n  );\n};\n\nexport default ContactElement;\n\nContactElement.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport ContactElement from 'components/ContactElement';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n// import { List } from './ContactList.styled';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  // const sortedContacts = visibleContacts.sort((firstItem, secondItem) => firstItem.name - secondItem.name);\n  // console.log(sortedContacts) key={contact.id}\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid\n        container\n        spacing={{ xs: 2, md: 3 }}\n        columns={{ xs: 4, sm: 8, md: 12 }}\n      >\n        {visibleContacts &&\n          visibleContacts.map(contact => (\n            <Grid item xs={2} sm={4} md={4} key={contact.id}>\n              <ContactElement contact={contact} />\n            </Grid>\n          ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\n// import { FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst Filter = () => {\n  const { filter } = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <>\n      <TextField\n        value={filter}\n        onChange={handleFilterChange}\n        variant=\"outlined\"\n        label=\"Search contact\"\n        type='text'\n        placeholder='Find contact by name'\n        fullWidth\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n        sx={{\n          marginBottom: '20px',\n          \n        }}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Typography variant=\"h5\" textTransform=\"uppercase\" margin='15px'>\n        My contacts\n      </Typography>\n      <Box\n        sx={{\n          padding: '20px',\n          display: 'flex',\n          // flexWrap: 'wrap',\n          alignItems: 'start',\n          gap: '20px',\n        }}\n      >\n        <ContactForm />\n        <div>\n          <Filter />\n          {isLoading && !error && (\n            <p>\n              <b>Request in progress...</b>\n            </p>\n          )}\n          <ContactList />\n        </div>\n      </Box>\n    </>\n  );\n};\nexport default ContactsPage;\n"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","Form","styled","useSelector","dispatch","useDispatch","onSubmit","e","preventDefault","form","target","find","elements","value","toast","addContact","number","reset","TextField","required","label","type","variant","size","pattern","title","Button","id","Card","sx","minWidth","CardContent","backgroundColor","AccountCircleOutlined","color","Typography","Phone","CardActions","onClick","deleteContact","startIcon","Delete","visibleContacts","Box","flexGrow","Grid","container","spacing","xs","md","columns","sm","map","item","onChange","setFilter","placeholder","fullWidth","InputProps","startAdornment","InputAdornment","position","Search","marginBottom","useEffect","fetchContacts","textTransform","margin","padding","display","alignItems","gap"],"sourceRoot":""}